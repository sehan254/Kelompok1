# -*- coding: utf-8 -*-
"""VolumeSampah.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WslXwszmMsBv4UuYTf3CNK_LOTz7EQ78

Secara matematis, persamaan dari Simple Linear Regression adalah sebagai berikut:

y = mx + b + e

y = dependent variable
m = slope dari garis (persamaan diatas merupakan sebuah garis)
x = independent variable
b = intercept
e = error

https://medium.com/@adiptamartulandi/belajar-machine-learning-simple-linear-regression-di-python-e82972695eaf
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df = pd.read_csv('data sampah kota sukabumi.csv', sep=";", skiprows=1)

#Melihat 5 baris teratas dari data.
#Independent variabel(x) adalah horsepower.
#Dependent variabel(y) adalah price.
df.head()

#Mengetahui jumlah kolom dan baris dari data.
#Data kita mempunya 2 kolom dengan 200 baris.
df.shape

#Melihat informasi data kita mulai dari jumlah data, tipe data, memory yang digunakan dll.
df.info()

#Melihat statistical description dari data mulai dari mean, kuartil, standard deviation dll.
df.describe()

#Mencari dan menangani missing values.
#Ternyata data kita tidak ada missing values.
df.isnull().sum()

bulan_valid = [
    "JANUARI", "FEBRUARI", "MARET", "APRIL", "MEI", "JUNI",
    "JULI", "AGUSTUS", "SEPTEMBER", "OKTOBER", "NOVEMBER", "DESEMBER"
]
data = df[df["BULAN"].isin(bulan_valid)]  # hanya ambil baris yang mengandung nama bulan



# Menentukan daftar tahun yang akan ditampilkan
tahun = ['2017', '2018', '2020', '2021', '2022', '2023']
bulan = data['BULAN']
x = range(len(bulan))  # posisi untuk sumbu X

# Membuat diagram batang
plt.figure(figsize=(14, 7))
bar_width = 0.12

for i, thn in enumerate(tahun):
    posisi = [pos + i * bar_width for pos in x]
    plt.bar(posisi, data[thn], width=bar_width, label=thn)

# Tambahan detail visual
plt.xlabel("Bulan")
plt.ylabel("Volume Sampah (ton)")
plt.title("Volume Sampah Kota Sukabumi per Bulan (2017–2023)")
plt.xticks([pos + bar_width * 2.5 for pos in x], bulan, rotation=45)
plt.legend(title="Tahun")
plt.tight_layout()
plt.show()

"""Dapat dilihat bahwa mean dan median dari horsepower terpusat di sekitar nilai 100.
Distribusinya hampir mirip dengan distribusi normal namun persebaran data kurang merata (memiliki standard deviasi yang tinggi) karena memiliki whiskers boxplot yang panjang.
Terdapat 3 outliers data yang bisa dilihat di boxplot.

Mean dan median dari horsepower terpusat di sekitar nilai 10000.
Distribusinya lebih ke right skew dan persebaran data kurang merata (memiliki standard deviasi yang tinggi).
Data memiliki banyak outliers jika dibandingkan dengan horsepower.
"""

df = df[df["BULAN"].isin(bulan_valid)].reset_index(drop=True)

# Plot scatter plot untuk setiap tahun
tahun = ['2017', '2018', '2020', '2021', '2022', '2023']

plt.figure(figsize=(12, 6))
for thn in tahun:
    plt.scatter(df['BULAN'], df[thn], label=thn)

plt.xlabel('BULAN')
plt.ylabel('Volume Sampah (ton)')
plt.title('Scatter Plot BULAN vs Volume Sampah per Tahun')
plt.xticks(rotation=45)
plt.legend(title="Tahun")
plt.legend(title="Tahun", loc='center left', bbox_to_anchor=(-0.15, 0.5))
plt.grid(True)
plt.tight_layout()
plt.show()

"""Dari scatter plot dapat dilihat secara kasat mata bahwa data memiliki korelasi positif yang cukup signifikan.
Hal ini berarti dengan bertambahnya nilai dari horsepower maka nilai price pun akan bertambah.
"""

df['BULAN'] = df['BULAN'].replace({
    'JANUARI': 1,
    'FEBRUARI': 2,
    'MARET': 3,
    'APRIL': 4,
    'MEI': 5,
    'JUNI': 6,
    'JULI': 7,
    'AGUSTUS': 8,
    'SEPTEMBER': 9,
    'OKTOBER': 10,
    'NOVEMBER': 11,
    'DESEMBER': 12
})

#Pertama, buat variabel x dan y.
x = df['BULAN'].values.reshape(-1,1)
y = df[['2017', '2018', '2020', '2021', '2022', '2023']].values

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

lin_reg = LinearRegression()

lin_reg.fit(x_train, y_train)

print(lin_reg.coef_)
print(lin_reg.intercept_)

"""Dari nilai m dan b diatas, kalau dimasukan ke dalam rumus menjadi:
Y = 164.73x — 3911.83
"""

lin_reg.score(x_test, y_test)

y_prediksi = lin_reg.predict(x_test)
plt.scatter(x_test, y_test [:, 0] )
plt.plot(x_test, y_prediksi [:, 0],c='r')
plt.xlabel('BULAN')
plt.ylabel('Volume Sampah (ton)')
plt.title('Plot Bulan vs Volume sampah')

bulan = 12
tahun = 2023
hasil = lin_reg.predict([[bulan, tahun]])
print(f"Prediksi volume sampah untuk bulan {bulan} dan tahun {tahun}: {hasil[0]:.2f} ton")